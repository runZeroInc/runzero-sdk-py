name: Check PR Pipeline

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: false

on:
  pull_request:
    paths:
      - '.github/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'runzero/**'
      - 'tests/**'

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Install dependencies
        run: poetry install --with dev,docs
      - name: Build project documentation
        uses: ./.github/actions/docsbuild
  test-unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --with dev
      - name: Run tests - Unit
        uses: ./.github/actions/tests/unit
      - name: Run tests - install check
        uses: ./.github/actions/tests/install
  test-integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --with dev
      - name: Run tests - Integration
        if: github.actor != 'dependabot[bot]'
        uses: ./.github/actions/tests/integration
        env:
          url: ${{ secrets.STAGING_PYTHON_SDK_URL }}
          account_token: ${{ secrets.STAGING_PYTHON_SDK_ACCOUNT_KEY }}
          org_token: ${{ secrets.STAGING_PYTHON_SDK_ORG_KEY }}
          org_id: ${{ secrets.STAGING_PYTHON_SDK_ORG_ID }}
          client_id: ${{ secrets.STAGING_PYTHON_SDK_CLIENT_ID }}
          client_secret: ${{ secrets.STAGING_PYTHON_SDK_SECRET }}
          validate_cert: "true"
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --with dev
      - name: Check code formatting
        uses: ./.github/actions/lints/black
      - name: Check import sorting
        uses: ./.github/actions/lints/isort
      - name: Check linting
        uses: ./.github/actions/lints/pylint
      - name: Type checking
        uses: ./.github/actions/lints/mypy
      - name: Check dependencies
        uses: ./.github/actions/lints/deptry
